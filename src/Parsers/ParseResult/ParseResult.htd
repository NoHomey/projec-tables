#pragma once

#include "../../String/ConstString/ConstString.h"

template<typename Type, typename Parsed = Type>
class ParseResult {
public:
    ParseResult() noexcept = default;

    ParseResult(Parsed parsed) noexcept;

    ParseResult(Parsed parsed, ConstString& rest) noexcept;

    ParseResult(std::nullptr_t, ConstString& rest) noexcept;

public: 
    Parsed getParsed() const noexcept;

    ConstString& getRest() const noexcept;

    bool isNull() const noexcept;

private:
    Type parsed;

    ImmutableString rest;

    bool isNullValue;
};

#include "ParseResult.tci"